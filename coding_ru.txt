* Оформление
Отступы - 4 пробела.
Агрументы функций/методов отделять одним пробелом.
Бинарные операторы отделять пробелом.
Условия/циклы с одним оператором можно без операторных скобок.
Короткие условия можно в одну строчку.
В конце каждой комманды - ;
* Архитектура
Можно ООП, функциональщину, но не сверх меры.
Учитывать возможность многократного использования кода.
Никаких жирных расчётов в js коде.
Избегать callback лапши, если от неё нет ощутимой выгоды.
Глобальные функции/переменные/константы по необходимости, без фанатизма.
Многопоточность планируется на стороне си, на стороне js только отправка задачи и ожидание результата. Никаких разделяемых данных, синхронизаций и пр. в js.
Стараться делать модульный, хорошо изолированный код. Глобальные функции/объекты не должны сильно страдать от чьего-то похабства.
* Общие приёмы
Не слепливать более 3-х тернарных операторов.
Использовать короткие (2-3 символа) переменные для маленьких функций, если они там очень часто повторяются.
Избегать длинных названий (15+ символов)
Следить за типом данных в js коде, особенно при вызове нативных функций.
